library(shiny); runApp('main.R')
library(genefilter)
setwd("/media/zhi/Drive3/GeneCoexpression/matlab_old");
setwd("/Users/zhi/Desktop/GeneCoexpression/matlab_old"); #mac
data<-read.csv("./RNAdata.csv", header=T, stringsAsFactors=F)
# Step 1
RNA <- data.frame(data[1:dim(data)[1], 2:dim(data)[2]])
geneID <- data.frame(data[1:dim(data)[1], 1])
browseVignettes(genefilter)
browseVignettes("genefilter")
varFilter
varFilter(RNA, var.cutoff = 0.2)
library(Biobase)
library(convert)
install.packages("convert")
RNA <- data[1:dim(data)[1], 2:dim(data)[2]]
varFilter(RNA, var.cutoff = 0.2)
RNA <- as.matrix(data[1:dim(data)[1], 2:dim(data)[2]])
varFilter(RNA, var.cutoff = 0.2)
RNA_filtered <- varFilter(RNA, var.cutoff = 0.2)
# Remove data with lowest 20% absolute exp value shared by all samples
quantile(RNA, 0.1, type=1)
quantile
# Remove data with lowest 20% absolute exp value shared by all samples
quantile(RNA, probs=0.1, type=1)
# Remove data with lowest 20% absolute exp value shared by all samples
quantile(RNA, probs=0.1)
# Remove data with lowest 20% absolute exp value shared by all samples
quantile(data.frame(RNA), probs=0.1, type=1)
quantile(RNA, 0.95)
quantile(RNA, 0.1)
quantile(RNA, 0.2)
RNA_filtered = RNA[RNA < quantile(RNA, 0.2), ]
quantile(RNA, 0.2)
RNA_filtered = RNA[RNA[:] > quantile(RNA, 0.2), ]
RNA_filtered = RNA[RNA[:,:] > quantile(RNA, 0.2), ]
RNA_filtered = RNA[RNA[:,:] > quantile(RNA, 0.2), ]
apply(RNA, 1, max)
RNA_max = apply(RNA,1,max)
# Remove data with lowest 20% absolute exp value shared by all samples
RNA_max = apply(RNA,1,max)
RNA_filtered = RNA[RNA_max < quantile(RNA, 0.2), ]
# Step 1
RNA <- data.frame(as.matrix(data[1:dim(data)[1], 2:dim(data)[2]]))
geneID <- data.frame(data[1:dim(data)[1], 1])
# Remove data with lowest 20% absolute exp value shared by all samples
RNA_max = apply(RNA,1,max)
RNA_filtered = RNA[RNA_max < quantile(RNA, 0.2), ]
RNA_max < quantile(RNA, 0.2)
as.numeric(RNA_max) < quantile(RNA, 0.2)
data.frame(RNA_max) < quantile(RNA, 0.2)
RNA_max_df = data.frame(RNA_max)
View(RNA_max_df)
View(RNA_max_df)
RNA_max$RNA_max_df < quantile(RNA, 0.2)
RNA_max_df < quantile(RNA, 0.2)
# Step 1
RNA <- as.matrix(data[1:dim(data)[1], 2:dim(data)[2]])
quantile(RNA, 0.2)
# Remove data with lowest 20% absolute exp value shared by all samples
threshold = quantile(RNA, 0.2, type=1)
threshold
# Remove data with lowest 20% absolute exp value shared by all samples
threshold = quantile(RNA, 0.2)[2]
# Remove data with lowest 20% absolute exp value shared by all samples
threshold = quantile(RNA, 0.2)[1]
# Remove data with lowest 20% absolute exp value shared by all samples
threshold = quantile(RNA, 0.2).num
# Remove data with lowest 20% absolute exp value shared by all samples
threshold = quantile(RNA, 0.2)[[1]]
RNA_max = apply(RNA,1,max)
RNA_max < threshold
RNA_filtered = RNA[RNA_max < threshold, ]
RNA_filtered = RNA[RNA_max > threshold, ]
ans = data.frame(RNA_filtered)
# Remove data with lowest 10% variance across samples
RNA_filtered <- varFilter(RNA_filtered, var.cutoff = 0.1)
ans = data.frame(RNA_filtered)
# Step 1
RNA <- as.matrix(data[1:dim(data)[1], 2:dim(data)[2]])
geneID <- data.frame(data[1:dim(data)[1], 1])
# Remove data with lowest 20% absolute exp value shared by all samples
RNA_filtered = RNA[apply(RNA,1,max) > quantile(RNA, 0.2)[[1]], ]
# Remove data with lowest 10% variance across samples
RNA_filtered <- varFilter(RNA_filtered, var.cutoff = 0.1)
# Step 1
RNA <- as.matrix(data[1:dim(data)[1], 2:dim(data)[2]])
geneID <- data.frame(data[1:dim(data)[1], 1])
# Remove data with lowest 20% absolute exp value shared by all samples
RNA_filtered1 = RNA[apply(RNA,1,max) > quantile(RNA, 0.2)[[1]], ]
geneID_filtered1 = geneID[apply(RNA,1,max) > quantile(RNA, 0.2)[[1]], ]
geneID_filtered1
# Remove data with lowest 10% variance across samples
RNA_filtered2 <- varFilter(RNA_filtered1, var.cutoff = 0.1)
RNA_filtered2$filters.log
RNA_filtered2$filter.log
# Remove data with lowest 10% variance across samples
RNA_filtered2 <- varFilter(RNA_filtered1, var.cutoff = 0.1)
RNA_filtered2$filter.log
filter.log
varFilter
# setwd("/media/zhi/Drive3/GeneCoexpression/matlab_old");
setwd("/Users/zhi/Desktop/GeneCoexpression/shiny"); #mac
# Remove data with lowest 10% variance across samples
index <- varFilter2(RNA_filtered1, var.cutoff = 0.1)
library(genefilter)
library(Biobase)
# setwd("/media/zhi/Drive3/GeneCoexpression/matlab_old");
setwd("/Users/zhi/Desktop/GeneCoexpression/shiny"); #mac
data<-read.csv("../matlab_old/RNAdata.csv", header=T, stringsAsFactors=F)
# Step 1
RNA <- as.matrix(data[1:dim(data)[1], 2:dim(data)[2]])
geneID <- data.frame(data[1:dim(data)[1], 1])
# Remove data with lowest 20% absolute exp value shared by all samples
RNA_filtered1 = RNA[apply(RNA,1,max) > quantile(RNA, 0.2)[[1]], ]
geneID_filtered1 = geneID[apply(RNA,1,max) > quantile(RNA, 0.2)[[1]], ]
# Remove data with lowest 10% variance across samples
index <- varFilter2(RNA_filtered1, var.cutoff = 0.1)
# Remove data with lowest 10% variance across samples
index <- varFilter2(RNA_filtered1, var.cutoff = 0.1)
# Remove data with lowest 10% variance across samples
index <- varFilter2(eset, var.func = IQR, var.cutoff = 0.1, filterByQuantile = TRUE)
varFilter2
# Remove data with lowest 10% variance across samples
index <- varFilter2(RNA_filtered1, var.cutoff = 0.1)
# Remove data with lowest 10% variance across samples
index <- varFilter2(RNA_filtered1, var.cutoff = 0.1)
# Remove data with lowest 10% variance across samples
index <- varFilter2(RNA_filtered1, var.cutoff = 0.1)
library(genefilter)
library(genefilter)
library(Biobase)
# setwd("/media/zhi/Drive3/GeneCoexpression/matlab_old");
setwd("/Users/zhi/Desktop/GeneCoexpression/shiny"); #mac
data<-read.csv("../matlab_old/RNAdata.csv", header=T, stringsAsFactors=F)
# Step 1
RNA <- as.matrix(data[1:dim(data)[1], 2:dim(data)[2]])
geneID <- data.frame(data[1:dim(data)[1], 1])
# Remove data with lowest 20% absolute exp value shared by all samples
RNA_filtered1 = RNA[apply(RNA,1,max) > quantile(RNA, 0.2)[[1]], ]
geneID_filtered1 = geneID[apply(RNA,1,max) > quantile(RNA, 0.2)[[1]], ]
# Remove data with lowest 10% variance across samples
index <- varFilter2(RNA_filtered1, var.cutoff = 0.1)
source("utils.R")
# Remove data with lowest 10% variance across samples
index <- varFilter2(RNA_filtered1, var.cutoff = 0.1)
# Remove data with lowest 10% variance across samples
index <- varFilter2(RNA_filtered1, var.cutoff = 0.1)
# Remove data with lowest 10% variance across samples
index <- varFilter2(RNA_filtered1, var.cutoff = 0.1)
rowIQRs
library(matrixStats)
install.packages(matrixStats)
genefilter
genefilter.rowIQRs
Biobase.rowIQRs
install.packages("matrixStats")
library(matrixStats)
package:genefilter:rowIQRs()
package:genefilter:rowIQRs
genefilter:rowIQRs
# Remove data with lowest 10% variance across samples
index <- varFilter2(RNA_filtered1, var.cutoff = 0.1)
# Remove data with lowest 10% variance across samples
index <- varFilter2(RNA_filtered1, var.cutoff = 0.1)
RNA_filtered2 = RNA_filtered1[index, ]
geneID_filtered2 = geneID_filtered1[index, ]
geneID_filtered2 = geneID_filtered1[index]
varFilter2(RNA_filtered1, var.cutoff = 0.1, geneID = geneID_filtered1)
varFilter2(RNA_filtered1, var.cutoff = 0.1, geneID = geneID_filtered1)
source("utils.R")
varFilter2(RNA_filtered1, var.cutoff = 0.1, geneID = geneID_filtered1)
source("utils.R")
varFilter2(RNA_filtered1, var.cutoff = 0.1, geneID = geneID_filtered1)
source("utils.R")
# Remove data with lowest 10% variance across samples
index <- varFilter2(RNA_filtered1, var.cutoff = 0.1)
source("utils.R")
# Remove data with lowest 10% variance across samples
index <- varFilter2(RNA_filtered1, var.cutoff = 0.1)
# Remove data with lowest 20% absolute exp value shared by all samples
RNA_filtered1 = RNA[apply(RNA,1,max) > quantile(RNA, 0.2)[[1]], ]
source("utils.R")
geneID_filtered1 = geneID[apply(RNA,1,max) > quantile(RNA, 0.2)[[1]], ]
# Remove data with lowest 10% variance across samples
index <- varFilter2(RNA_filtered1, var.cutoff = 0.1)
# Remove data with lowest 10% variance across samples
index <- varFilter2(eset = RNA_filtered1, var.cutoff = 0.1)
# setwd("/media/zhi/Drive3/GeneCoexpression/matlab_old");
setwd("/Users/zhi/Desktop/GeneCoexpression/shiny"); #mac
source("utils.R")
# Remove data with lowest 10% variance across samples
index <- varFilter2(eset = RNA_filtered1, var.cutoff = 0.1)
# Remove data with lowest 10% variance across samples
index <- varFilter2(eset = data.frame(RNA_filtered1), var.cutoff = 0.1)
# Remove data with lowest 10% variance across samples
index <- varFilter2(eset = as.numeric(RNA_filtered1), var.cutoff = 0.1)
# Remove data with lowest 10% variance across samples
index <- varFilter2(eset = as.numeric(RNA_filtered1), var.cutoff = 0.1)
# Step 1
RNA <- as.matrix(data[1:dim(data)[1], 2:dim(data)[2]])
geneID <- data.frame(data[1:dim(data)[1], 1])
# Remove data with lowest 20% absolute exp value shared by all samples
RNA_filtered1 = RNA[apply(RNA,1,max) > quantile(RNA, 0.2)[[1]], ]
geneID_filtered1 = geneID[apply(RNA,1,max) > quantile(RNA, 0.2)[[1]], ]
# Remove data with lowest 10% variance across samples
index <- varFilter2(eset = RNA_filtered1, var.cutoff = 0.1)
