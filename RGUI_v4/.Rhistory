nb
nba
View(nba)
View(nba)
nba <- read.csv("http://datasets.flowingdata.com/ppg2008.csv", sep=",")
nba <- nba[order(nba$PTS),] #sort data
row.names(nba) <- nba$Name
View(nba)
View(nba)
nba <- read.csv("http://datasets.flowingdata.com/ppg2008.csv", sep=",")
View(nba)
View(nba)
nba <- read.csv("http://datasets.flowingdata.com/ppg2008.csv", sep=",")
nba <- nba[order(nba$PTS),] #sort data
row.names(nba) <- nba$Name
nba <- nba[,2:20]
View(nba)
View(nba)
# http://flowingdata.com/2010/01/21/how-to-make-a-heatmap-a-quick-and-easy-solution/
nba <- read.csv("http://datasets.flowingdata.com/ppg2008.csv", sep=",")
nba <- nba[order(nba$PTS),] #sort data
row.names(nba) <- nba$Name
nba <- nba[,2:20]
nba_matrix <- data.matrix(nba)
nba_heatmap <- heatmap(nba_matrix, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10))
nba_heatmap <- heatmap(nba_matrix, Rowv=NA, Colv=NA, col = heat.colors(256), scale="column", margins=c(5,10))
# http://flowingdata.com/2010/01/21/how-to-make-a-heatmap-a-quick-and-easy-solution/
nba <- read.csv("http://datasets.flowingdata.com/ppg2008.csv", sep=",")
nba <- nba[order(nba$PTS),] #sort data
row.names(nba) <- nba$Name
nba <- nba[,2:20]
nba_matrix <- data.matrix(nba)
nba_heatmap <- heatmap(nba_matrix, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10))
nba_heatmap <- heatmap(nba_matrix, Rowv=NA, Colv=NA, col = heat.colors(256), scale="column", margins=c(5,1
install.packages(rsconnect)
install.packages(rsconnected)
install.packages("rsconnected")
install.packages("rsconnected")
install.packages("rsconnected")
install.packages("rsconnect")
library(rsconnect)
install.packages("shiny")
install.packages("shiny")
source("https://bioconductor.org/biocLite.R")
biocLite("genefilter")
genefilter
library(genefilter)
library(shiny); runApp('Desktop/GeneCoexpression/shiny/main.R')
install.packages("rPython")
text <- ""
library(shiny); runApp('Desktop/GeneCoexpression/shiny/main2.R')
runApp('Desktop/GeneCoexpression/shiny/main.R')
library(shiny); runApp('Desktop/GeneCoexpression/shiny/main2.R')
source("http://bioconductor.org/biocLite.R")
biocLite(c("AnnotationDbi", "impute", "GO.db", "preprocessCore"))
install.packages(c("matrixStats", "Hmisc", "splines", "foreach", "doParallel", "fastcluster", "dynamicTreeCut", "survival"))
source("http://bioconductor.org/biocLite.R")
biocLite(c("GO.db", "preprocessCore", "impute"))
library(shiny); runApp('Desktop/GeneCoexpression/shiny/main2.R')
runApp('Desktop/GeneCoexpression/shiny/main2.R')
shiny::runApp('Desktop/GeneCoexpression/RGUI')
shiny::runApp('Desktop/GeneCoexpression/RGUI')
runApp('Desktop/GeneCoexpression/RGUI')
runApp('Desktop/GeneCoexpression/RGUI')
shiny::runApp('Desktop/GeneCoexpression/RGUI')
runApp('Desktop/GeneCoexpression/RGUI')
runApp('Desktop/GeneCoexpression/RGUI')
shiny::runApp('Desktop/GeneCoexpression/RGUI')
shiny::runApp('Desktop/GeneCoexpression/RGUI')
shiny::runApp('Desktop/GeneCoexpression/RGUI')
shiny::runApp('Desktop/GeneCoexpression/RGUI')
shiny::runApp('Desktop/GeneCoexpression/RGUI')
runApp('Desktop/GeneCoexpression/RGUI')
runApp('Desktop/GeneCoexpression/RGUI')
runApp('Desktop/GeneCoexpression/RGUI')
runApp('Desktop/GeneCoexpression/RGUI')
runApp('Desktop/GeneCoexpression/shiny-examples-master/002-text')
runApp('Desktop/GeneCoexpression/shiny-examples-master/003-reactivity')
runApp('Desktop/GeneCoexpression/shiny-examples-master/003-reactivity')
runApp('Desktop/GeneCoexpression/RGUI')
t <- try(gset <- getGEO(myGSE, GSEMatrix=TRUE, AnnotGPL=FALSE)) #AnnotGPL default is FALSE
myGSE = "GSE 17537"
myGSE = "GSE17537"
t <- try(gset <- getGEO(myGSE, GSEMatrix=TRUE, AnnotGPL=FALSE)) #AnnotGPL default is FALSE
gset <- gset[[idx]]
idx = 1
gset <- gset[[idx]]
edata <- exprs(gset) #This is the expression matrix
pdata <- pData(gset) # data.frame of phenotypic information.
fname <- featureNames(gset) # e.g. 12345_at
fname
pdata
names(pdata)
pdata$title
names(pdata)
pdata$taxid_ch1
pdata$scan_protocol
pdata$data_processing
names(pdata)
pdata$`overall survival follow-up time:ch1`
pdata$supplementary_file
names(pdata)
pdata$extract_protocol_ch1
names(pdata)
gset
gset$Annotation
gset
gset$`ethnicity:ch1`
gset$annotation
View(gset)
gset[1]
gset[2]
gset[[1]]
gset[[2]]
gset[[3]]
gset[[4]]
gset[[5]]
gset[[6]]
gset[[7]]
gset[1,1]
gset[1,2]
gset[2,2]
edata$annotation
annotation(gset)
edata
dim(edata)
dim(edata)[1]
print(sprintf("Number of Samples: ",dim(edata)[2]-1))
dim(edata)[2]
dim(edata)[2]-1
print(sprintf("Annotation Platform: %s",annotation(gset)))
print(sprintf("Number of Genes: %d",dim(edata)[1]))
print(sprintf("Number of Samples: %d",dim(edata)[2]-1))
runApp('Desktop/GeneCoexpression/RGUI')
edata(1:4,1:$)
edata(1:4,1:5)
edata(1:4,1:5)
edata[1:4,1:3]
protocolData(geset)
protocolData(gset)
description(gset)
notes(gset)
storageMode(gset)
runApp('Desktop/GeneCoexpression/RGUI')
runApp('Desktop/GeneCoexpression/RGUI')
runApp('Desktop/GeneCoexpression/RGUI')
runApp('Desktop/GeneCoexpression/RGUI')
runApp('Desktop/GeneCoexpression/RGUI')
runApp('Desktop/GeneCoexpression/RGUI')
runApp('Desktop/GeneCoexpression/RGUI')
runApp('Desktop/GeneCoexpression/RGUI')
runApp('Desktop/GeneCoexpression/RGUI')
gset
Meta(gset)
GPLList
GPLList(GPL579)
GPLList(GPL570)
GPLList("GPL570")
GPLList(gset)
GPLList(eset)
GPLList(edata)
GDS2MA(gset,GPL="GPL570")
getGEO("GPL570")
gpl <- getGEO('GPL570')
Meta(gpl)$title
Meta(gpl)
gpl
gpl
gpl$Gene
gpl[1,1]
gpl[1]
Meta(gpl)
gpl$Gene.Symbol
fData(data)
GPLList(gpl)
pData(gpl)
Table(gpl)
#https://www.rdocumentation.org/packages/GEOquery/versions/2.38.4/topics/GEOData-class
gpltable <- Table(gpl)
gpltable[1,]
gpltable%ID
gpltable$ID
gpltable$`Gene Symbol`
gpltable$ID
which(gpltable$ID == "1553559_at")
gpltable[953,]
gpltable[idx,]$`Gene Symbol`
idx
idx <- which(gpltable$ID == "1553559_at")
gpltable[idx,]$`Gene Symbol`
gpltable[953,]
gpltable[idx,]$`Gene Symbol`
edata
fname
row.names(data)
fname
length(fname)
fname[1]
for (i in 1:length(fname)){
which(gpltable$ID == fname[i])
}
runApp('Desktop/GeneCoexpression/RGUI')
shiny::runApp('Desktop/GeneCoexpression/RGUI')
runApp('Desktop/GeneCoexpression/RGUI')
try(gpl <- getGEO("GPL570"))
t <- try(gset <- getGEO("GSE17537", GSEMatrix=TRUE, AnnotGPL=FALSE)) #AnnotGPL default is FALSE
edata <- exprs(gset) #This is the expression matrix
# pdata <- pData(gset) # data.frame of phenotypic information.
fname <<- featureNames(gset) # e.g. 12345_at
edata <- exprs(gset) #This is the expression matrix
if (length(gset) > 1) idx <- grep("GPL90", attr(gset, "names")) else idx <- 1
gset <- gset[[idx]]
edata <- exprs(gset) #This is the expression matrix
# pdata <- pData(gset) # data.frame of phenotypic information.
fname <<- featureNames(gset) # e.g. 12345_at
data <<- cbind(fname, edata)
data <- cbind(fname, edata)
row.names(data) <- seq(1, length(fname))
#https://www.rdocumentation.org/packages/GEOquery/versions/2.38.4/topics/GEOData-class
gpltable <- Table(gpl)
fname2 <- fname
for (i in 1:length(fname)){
fname2[i] <- gpltable$`Gene Symbol`[which(gpltable$ID == fname[i])]
}
print(dim(data))
print(length(fname2))
data[,1] <<- fname2
data[,1] <- fname2
row.names(data) <- seq(1, length(fname2))
RNA <- as.matrix(data[1:dim(data)[1], 2:dim(data)[2]])
class(RNA) <- "numeric"
geneID <- data.frame(data[1:dim(data)[1], 1])
print(dim(RNA))
print(dim(geneID))
# Remove data with lowest 20% absolute exp value shared by all samples
percentile <- .2
RNA_filtered1 = RNA[apply(RNA,1,max) > quantile(RNA, percentile)[[1]], ]
geneID_filtered1 = geneID[apply(RNA,1,max) > quantile(RNA, percentile)[[1]], ]
# Remove data with lowest 10% variance across samples
percentile <- .1
index <- varFilter2(eset = RNA_filtered1, var.cutoff = percentile)
RNA_filtered2 = RNA_filtered1[index, ]
geneID_filtered2 = geneID_filtered1[index]
# expData <- RNA_filtered2
# res <- highExpressionProbes(geneID_filtered2, geneID_filtered2, expData)
# ind1 <- res$first
# uniGene <- as.character(res$second)
# tmpExp <- expData[ind1,]
uniGene <- geneID_filtered2
tmpExp <- RNA_filtered2
print(sprintf("data dimension before remove gene with empty symbol: %d x %d",dim(tmpExp)[1],dim(tmpExp)[2]))
uniGene <- subset(uniGene, nchar(as.character(uniGene)) > 0)
tmpExp <- subset(tmpExp, nchar(as.character(uniGene)) > 0)
print(sprintf("data dimension after remove gene with empty symbol: %d x %d",dim(tmpExp)[1],dim(tmpExp)[2]))
uniGene
nchar(as.character(uniGene))
view(uniGene)
uniGene[999:2999]
uniGene[999:2999,]
uniGene[1000:1400]
uniGene[2001:3000]
sum(as.numeric(nchar(as.character(uniGene)) > 0))
sum(as.numeric(nchar(as.character(uniGene)) > 0))
sum(as.numeric(nchar(as.character(uniGene)) == 0))
sum(as.numeric(nchar(as.character(uniGene)) == 0))
length(uniGene)
length(uniGene)
length(geneID_filtered2)
# expData <- RNA_filtered2
# res <- highExpressionProbes(geneID_filtered2, geneID_filtered2, expData)
# ind1 <- res$first
# uniGene <- as.character(res$second)
# tmpExp <- expData[ind1,]
uniGene <- geneID_filtered2
tmpExp <- RNA_filtered2
print(sprintf("data dimension before remove gene with empty symbol: %d x %d",dim(tmpExp)[1],dim(tmpExp)[2]))
# expData <- RNA_filtered2
# res <- highExpressionProbes(geneID_filtered2, geneID_filtered2, expData)
# ind1 <- res$first
# uniGene <- as.character(res$second)
# tmpExp <- expData[ind1,]
uniGene <- geneID_filtered2
tmpExp <- RNA_filtered2
print(sprintf("data dimension before remove gene with empty symbol: %d x %d",dim(tmpExp)[1],dim(tmpExp)[2]))
uniGene_temp <- subset(uniGene, nchar(as.character(uniGene)) > 0)
tmpExp <- subset(tmpExp, nchar(as.character(uniGene)) > 0)
uniGene <- uniGene_temp
print(sprintf("data dimension after remove gene with empty symbol: %d x %d",dim(tmpExp)[1],dim(tmpExp)[2]))
runApp('Desktop/GeneCoexpression/RGUI')
shiny::runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/shiny-examples-master/007-widgets')
runApp('Desktop/GeneCoexpression/shiny-examples-master/015-layout-sidebar')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
shiny::runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
shiny::runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
runApp('Desktop/GeneCoexpression/RGUI_v2')
shiny::runApp('Desktop/GeneCoexpression/RGUI_v2')
shiny::runApp('Desktop/GeneCoexpression/RGUI_v2')
shiny::runApp('Desktop/GeneCoexpression/RGUI_v2')
shiny::runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
shiny::runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
matrix(rexp(200, rate=.1), ncol=20)
head(data.frame(matrix(rexp(200, rate=.1), ncol=20)))
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
shiny::runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
shiny::runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
runApp('Desktop/GeneCoexpression/RGUI_v3')
shiny::runApp('Desktop/GeneCoexpression/RGUI_v4')
runApp('Desktop/GeneCoexpression/RGUI_v4')
runApp('Desktop/GeneCoexpression/RGUI_v4')
shiny::runApp('Desktop/GeneCoexpression/RGUI_v4')
runApp('~/Desktop/GeneCoexpression/shiny-examples-master/012-datatables')
head(iris)
head(mpg)
runApp('Desktop/GeneCoexpression/RGUI_v4')
runApp('Desktop/GeneCoexpression/RGUI_v4')
runApp('Desktop/GeneCoexpression/RGUI_v4')
head(iris2)
iris2 = iris
iris2[["Actions"]] <- paste0('
<div><button type="button" class="btn-analysis" id=goanalysis_',1:nrow(iris2),'>Analyze</button></div>')
head(iris2)
moveme(names(iris), "Actions first")
iris3 <- iris2 %>%
select("Actions", everything())
library(dplyr)
iris3 <- iris2 %>%
select("Actions", everything())
head(iris3)
runApp('Desktop/GeneCoexpression/RGUI_v4')
runApp('Desktop/GeneCoexpression/RGUI_v4')
runApp('Desktop/GeneCoexpression/RGUI_v4')
runApp('Desktop/GeneCoexpression/RGUI_v4')
